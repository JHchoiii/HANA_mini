plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'net.nurigo:javaSDK:2.2'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // Thymeleaf 의존성
//	implementation 'org.springframework.boot:spring-boot-starter-jsp' // JSP 의존성 추가

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.oracle.database.jdbc:ojdbc11'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	implementation 'io.jsonwebtoken:jjwt-gson:0.12.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper' // JSP 렌더링을 위한 의존성
	implementation 'javax.servlet:jstl:1.2'
	// Spring WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	// STOMP 메시지 브로커를 사용하려면 추가
	implementation 'org.springframework:spring-messaging'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'jakarta.activation:jakarta.activation-api:2.1.1' // 최신 버전 사용 권장


}

tasks.named('test') {
	useJUnitPlatform()
}
